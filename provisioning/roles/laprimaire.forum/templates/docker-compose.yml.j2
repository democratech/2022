{{ ansible_managed | comment }}
version: '3.3'

services:
  postgresql:
    image: 'docker.io/bitnami/postgresql:{{ discourse_postrgesql_version }}'
    restart: unless-stopped
    environment:
      POSTGRESQL_PASSWORD: "{{ discourse_postgresql_password }}"
    volumes:
      - '/data/discourse/postgresql:/bitnami/postgresql'
      - '/srv/discourse/postgresql-initdb.d:/docker-entrypoint-initdb.d'
    networks:
      - discourse
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"
        fluentd-async: "true"
        labels: "org.label-schema.group"
    labels:
      org.label-schema.group: "forum"
  redis:
    image: 'docker.io/bitnami/redis:{{ discourse_redis_version }}'
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: "{{ discourse_redis_password }}"
    volumes:
      - '/data/discourse/redis:/bitnami'
    networks:
      - discourse
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"
        fluentd-async: "true"
        labels: "org.label-schema.group"
    labels:
      org.label-schema.group: "forum"
  discourse:
    image: 'docker.io/bitnami/discourse:{{ discourse_version }}'
    restart: unless-stopped
    depends_on:
      - postgresql
      - redis
    volumes:
      - '/data/discourse/persistence:/bitnami'
    environment:
      POSTGRESQL_HOST: "postgresql"
      POSTGRESQL_ROOT_USER: "postgres"
      POSTGRESQL_ROOT_PASSWORD: "{{ discourse_postgresql_password }}"
      DISCOURSE_SKIP_INSTALL: "{{ discourse_skip_install | ternary('yes', 'no') }}"
      POSTGRESQL_CLIENT_CREATE_DATABASE_NAME: "{{ discourse_postrgesql_database }}"
      POSTGRESQL_CLIENT_CREATE_DATABASE_USERNAME: "postgres"
      POSTGRESQL_CLIENT_CREATE_DATABASE_PASSWORD: "{{ discourse_postgresql_password }}"
      DISCOURSE_POSTGRESQL_NAME: "{{ discourse_postrgesql_database }}"
      DISCOURSE_POSTGRESQL_USERNAME: "postgres"
      DISCOURSE_POSTGRESQL_PASSWORD: "{{ discourse_postgresql_password }}"
      DISCOURSE_HOSTNAME: "{{ discourse_fqdn }}"
      REDIS_PASSWORD: "{{ discourse_redis_password }}"
{% if discourse_smtp_host is defined %}
      SMTP_HOST: "{{ discourse_smtp_host }}"
      SMTP_PORT: "{{ discourse_smtp_port }}"
      SMTP_USER: "{{ discourse_smtp_user }}"
      SMTP_PASSWORD: "{{ discourse_smtp_password }}"
      SMTP_TLS: "{{ discourse_smtp_tls | ternary('yes', 'no') }}"
      SMTP_AUTH: "{{ discourse_smtp_auth }}"
{% endif %}
      VIRTUAL_HOST: "{{ discourse_fqdn }}"
      VIRTUAL_PORT: "3000"
      LETSENCRYPT_HOST: "{{ discourse_fqdn }}"
    networks:
      - discourse
      - nginx_reverse-proxy
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"
        fluentd-async: "true"
        labels: "org.label-schema.group"
    labels:
      org.label-schema.group: "forum"
  sidekiq:
    image: 'docker.io/bitnami/discourse:{{ discourse_version }}'
    restart: unless-stopped
    depends_on:
      - discourse
    volumes:
      - '/data/discourse/persistence:/bitnami'
    command: 'nami start --foreground discourse-sidekiq'
    environment:
      DISCOURSE_POSTGRESQL_NAME: "{{ discourse_postrgesql_database }}"
      DISCOURSE_POSTGRESQL_USERNAME: "postgres"
      DISCOURSE_POSTGRESQL_PASSWORD: "{{ discourse_postgresql_password }}"
      DISCOURSE_HOST: "discourse"
      DISCOURSE_PORT: "3000"
      DISCOURSE_HOSTNAME: "{{ discourse_fqdn }}"
      REDIS_PASSWORD: "{{ discourse_redis_password }}"
{% if discourse_smtp_host is defined %}
      SMTP_HOST: "{{ discourse_smtp_host }}"
      SMTP_PORT: "{{ discourse_smtp_port }}"
      SMTP_USER: "{{ discourse_smtp_user }}"
      SMTP_PASSWORD: "{{ discourse_smtp_password }}"
      SMTP_TLS: "{{ discourse_smtp_tls | ternary('yes', 'no') }}"
      SMTP_AUTH: "{{ discourse_smtp_auth }}"
{% endif %}
    networks:
      - discourse
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"
        fluentd-async: "true"
        labels: "org.label-schema.group"
    labels:
      org.label-schema.group: "forum"

networks:
  discourse:
  nginx_reverse-proxy:
    external: true
